<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>New York Times</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="/css/style.css" rel="stylesheet" />
    <%- include('header') %>
</head>
  <body>
    <div class="container mt-5">
        <h2 class="mb-4">Top Stories</h2>
        <div class="container mt-4">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Search articles" id="searchInput" aria-label="Search articles" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" id="searchBtn">Search</button>
                </div>
            </div>
            <div id="suggestionsDropdown" class="list-group" style="position: absolute; z-index: 1000;"></div>
        </div>
         
        <div class="row equal-height mt-4">
            <% articles.forEach(article => { %>
                <div class="col-md-4 mb-4 d-flex align-items-stretch">
                    <div class="card">
                        <% if(article.media.length > 0 && article.media[0]['media-metadata'].length > 2) { %>
                            <img src="<%= article.media[0]['media-metadata'][2].url %>" class="card-img-top" alt="Article Image">
                        <% } %>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title"><%= article.title %></h5>
                            <p class="card-text"><%= article.abstract %></p>
                            <p class="card-text"><small class="text-muted"><%= article.byline %> on <%= article.published_date %></small></p>
                            <a href="" class="btn btn-primary mt-auto" target="_blank">Read more</a>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        function debounce(func, wait, immediate) {
            var timeout;
            return function() {
                var context = this, args = arguments;
                var later = function() {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        }


        let lastQueryLength = 0;
        document.getElementById('searchInput').addEventListener('input', debounce(async function(e) {
            const query = e.target.value;
            

            // Fetch suggestions from your server
            const response = await fetch(`/suggest?q=${encodeURIComponent(query)}`);
            const suggestions = await response.json();

            // Populate the suggestions dropdown
            const suggestionsDropdown = document.getElementById('suggestionsDropdown');
            suggestionsDropdown.innerHTML = '';
            suggestions.forEach(suggestion => {
                const item = document.createElement('a');
                item.href = suggestion.url;
                item.classList.add('list-group-item', 'list-group-item-action');
                item.textContent = suggestion.title;
                item.addEventListener('click', function() {
                    window.location.href = suggestion.url;
                });
                suggestionsDropdown.appendChild(item);
            });
        }, 250)); // 250 milliseconds debounce time

        // To clear suggestions when clicked outside the search box
        document.addEventListener('click', function(event) {
            const suggestionsDropdown = document.getElementById('suggestionsDropdown');
            const searchInput = document.getElementById('searchInput');

            // Check if the click is outside of the suggestionsDropdown and the searchInput
            if (!suggestionsDropdown.contains(event.target) && event.target !== searchInput) {
                suggestionsDropdown.innerHTML = ''; // Clear suggestions
            }
        });


    </script>
        
  </body>
</html>